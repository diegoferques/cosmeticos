<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!-- Aplica uma funcao que remove campos do mdc vazios do log -->
    <!-- <variable scope="context" name="mdcPattern" value="%replace(responseCode: %X{responseCode}, httpStatus: %X{httpStatus},){'[a-zA-Z]+=( |$)', ''}"/> -->
   <variable scope="context" name="mdcPattern" value="responseCode: %X{responseCode}, idOrder: %X{idOrder}, previousOrderStatus: %X{previousOrderStatus}, newStatus: %X{newStatus}, superpayStatusStransacao: %X{superpayStatusStransacao}, httpStatus: %X{httpStatus}, urlPath: %X{urlPath}-"/>

    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
           <pattern>%d{HH:mm:ss.SSS} %-5level [%logger{36}] - ${mdcPattern} %msg%n</pattern>
       </encoder>
    </appender>



   <appender name="JSON" class="ch.qos.logback.core.rolling.RollingFileAppender">
       <Append>true</Append>
       <File>${LOG_PATH:-./log}/server.log.json</File>

       <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
           <providers>
               <timestamp><fieldName>timestamp</fieldName></timestamp>
               <logLevel/>
               <loggerName><fieldName>logger</fieldName></loggerName>
               <globalCustomFields><customFields>{"@source_host":"${HOSTNAME}"}</customFields></globalCustomFields>
               <globalCustomFields><customFields>{"application": "ipretty-backend"}</customFields></globalCustomFields>
               <mdc />
               <message />
           </providers>
       </encoder>
       <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
           <fileNamePattern>${LOG_PATH:-./log}/older/server.log.json.%d{yyyy-MM-dd}</fileNamePattern>
           <maxHistory>30</maxHistory>
       </rollingPolicy>
   </appender>

    <appender name="ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <Append>true</Append>
        <File>${LOG_PATH:-./log}/error.log</File>

        <!-- root-logger esta configurado pra logar infos neste aquivo, mas este filter so permitira errors -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>

        <encoder>
            <pattern>%d{HH:mm:ss.SSS} %-5level [%logger{36}] - ${mdcPattern} %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_PATH:-./log}/older/error.log.%d{yyyy-MM-dd}
            </fileNamePattern>
            <maxHistory>10</maxHistory>
        </rollingPolicy>
    </appender>


    <!-- Loga todos os INFO das classes abaixo do pacote com.cosmeticos -->
    <logger name="com.cosmeticos.smtp.MailSenderService" level="OFF" />

    <!-- Loga todos os INFO das classes abaixo do pacote com.cosmeticos -->
    <logger name="com.cosmeticos" additivity="false" level="INFO" >
        <appender-ref ref="JSON" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- Loga os xml de request/response feito por soap pelo sping-ws -->
    <logger name="org.springframework.ws.client.MessageTracing">
        <level value="TRACE" />
        <appender-ref ref="CONSOLE" />
    </logger>

    <!-- Estabelece o nivel de Log pra TODAS as classes do sistema incluindo as classes de framework. -->
    <root level="INFO">
        <appender-ref ref="CONSOLE" />
        <appender-ref ref="ERROR" />
    </root>

</configuration>
