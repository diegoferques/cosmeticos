server.port: 8080

server.tomcat.basedir=log
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)

## Banco de produção.
#none This is the default for MySQL, no change to the database structure.
#update Hibernaete changes the database according to the given Entity structures.
#create Creates the database every time, but don’t drop it when close.
#create-drop Creates the database then drops it when the SessionFactory closes. Pra funcionar devemos estar desconectados do banco por qualquer client.
spring.jpa.hibernate.ddl-auto=none
spring.datasource.url=definidos no server
spring.jpa.hibernate.use-new-id-generator-mappings=true
hibernate.id.new_generator_mappings=true

#mail configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=projetoubeleza@gmail.com
spring.mail.password=cosmeticos

#mail properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000

# Para fins de debug do spring-jpa
#spring.jpa.hibernate.format_sql=true
#spring.jpa.show-sql=true
order.unfinished.cron=0 0 9 * * ? 

exception.unresolved.cron=0 0 0/1 * * ?

##############################################
##### CARTÃO DE CRÉDITO ######################
##############################################
creditcard.gw.transaction.url=https://api.cieloecommerce.cielo.com.br/
creditcard.gw.path.authorize=
creditcard.gw.path.capture=
creditcard.gw.path.cancel=

# Configurados por system property no servidor
creditcard.gw.merchantid=
creditcard.gw.merchantKey=